import { IVersion, VersionType } from "@/lib/models/version";

export const matrixModel: IVersion<VersionType.MODEL> = {
  id: "matrixModel",
  name: "Matrix",
  description: "Matrix Model",
  slug: "matrix",
  type: VersionType.MODEL,
  nodes: [
    {
      id: "User",
      name: "User",
      position: { x: 100, y: 100 },
      type: VersionType.MODEL,
      data: {
        name: "User",
        description: "Müşteri ve potansiyel müşteri bilgilerini içeren şema",
        schemas: [
          {
            id: "n2",
            name: "fullname",
            type: "string",
            label: "Full Name",
            required: true,
            trim: true,
          },
          {
            id: "n3",
            name: "email",
            type: "string",
            label: "Email",
            required: true,
            unique: true,
            match: "/^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/",
          },
          {
            id: "n4",
            name: "password",
            type: "string",
            label: "Password",
            required: true,
            minLength: 6,
            select: false,
          },
          {
            id: "n5",
            name: "role",
            type: "string",
            label: "Role",
            required: true,
            default: "user",
            enum: ["user", "admin"],
          },
          {
            id: "n6",
            name: "photo",
            type: "string",
            label: "Photo",
            required: false,
          },
        ],
      },
    },
    {
      id: "Project",
      name: "Project",
      position: { x: 500, y: 100 },
      type: VersionType.MODEL,
      data: {
        name: "Project",
        description: "Proje bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "name",
            type: "string",
            label: "Name",
            required: true,
            trim: true,
          },
          {
            id: "n2",
            name: "description",
            type: "string",
            label: "Description",
            required: false,
            trim: true,
          },
          {
            id: "n3",
            name: "user",
            type: "reference",
            ref: "User",
            label: "User",
            required: true,
          },
          {
            id: "n4",
            name: "website",
            type: "string",
            label: "Website",
            required: false,
            trim: true,
            match:
              " /https?://(www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/",
          },
        ],
      },
    },
    {
      id: "Version",
      name: "Version",
      position: { x: 100, y: 400 },
      type: VersionType.MODEL,
      data: {
        name: "Version",
        description: "Versiyon bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "name",
            type: "string",
            label: "Name",
            required: true,
            trim: true,
          },
          {
            id: "n2",
            name: "description",
            type: "string",
            label: "Description",
            required: false,
            trim: true,
          },
          {
            id: "n4",
            name: "type",
            type: "string",
            label: "Type",
            required: true,
            default: VersionType.MODEL,
            enum: [
              VersionType.MODEL,
              VersionType.AGENT,
              VersionType.SCREEN,
              VersionType.PAGE,
            ],
          },
          {
            id: "n5",
            name: "project",
            type: "reference",
            ref: "Project",
            label: "Project",
            required: true,
          },
        ],
      },
    },
    {
      id: "Agent",
      name: "Agent",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Agent",
        description: "Agent bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "name",
            type: "string",
            label: "Name",
            required: true,
            trim: true,
          },
          {
            id: "n2",
            name: "instructions",
            type: "string",
            label: "Instructions",
            required: true,
            trim: true,
          },
          {
            id: "n3",
            name: "stream",
            type: "boolean",
            label: "Stream",
            required: true,
            default: false,
          },
          {
            id: "n4",
            name: "model_provider",
            type: "string",
            label: "Model Provider",
            required: true,
            default: "openai",
            enum: ["openai", "claude", "gemini", "custom"],
          },
          {
            id: "n5",
            name: "model_name",
            type: "string",
            label: "Model Name",
            required: true,
            default: "gpt-4o",
            enum: [
              "gpt-3.5-turbo",
              "gpt-4o",
              "gpt-4o-mini",
              "o1-mini",
              "o1-preview",
              "o1",
              "o3-mini",
              "claude-3-5-sonnet",
            ],
          },
          {
            id: "n6",
            name: "key",
            type: "reference",
            ref: "Key",
            label: "Key",
            required: true,
          },
          {
            id: "n7",
            name: "photo",
            type: "string",
            label: "Photo",
            required: false,
          },
          {
            id: "n8",
            name: "is_public",
            type: "boolean",
            label: "Is Public",
            required: true,
            default: false,
          },
          {
            id: "n9",
            name: "title",
            type: "string",
            label: "Title",
            required: false,
            trim: true,
          },
          {
            id: "n10",
            name: "seed",
            type: "number",
            label: "Seed",
            required: true,
            default: 1,
          },
          {
            id: "n11",
            name: "max_tokens",
            type: "number",
            label: "Max Tokens",
            required: true,
            default: 1000,
          },
          {
            id: "n12",
            name: "temperature",
            type: "number",
            label: "Temperature",
            required: true,
            default: 0.5,
          },
          {
            id: "n13",
            name: "project",
            type: "reference",
            label: "Project",
            ref: "Project",
            required: false,
          },
        ],
      },
    },
    {
      id: "Key",
      name: "Key",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Key",
        description: "Key bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "name",
            type: "string",
            label: "Name",
            required: true,
            trim: true,
          },
          {
            id: "n2",
            name: "value",
            type: "string",
            label: "Value",
            required: true,
            trim: true,
          },
          {
            id: "n3",
            name: "type",
            type: "string",
            label: "Type",
            required: true,
            enum: ["secret", "apiKey", "default", "custom"],
          },
          {
            id: "n4",
            name: "user",
            type: "reference",
            ref: "User",
            label: "User",
            required: true,
          },
          {
            id: "n5",
            name: "description",
            type: "string",
            label: "Description",
            required: false,
            trim: true,
          },
        ],
      },
    },
    {
      id: "Chat",
      name: "Chat",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Chat",
        description: "Chat bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "role",
            type: "string",
            label: "Role",
            required: true,
            enum: ["user", "system"],
          },
          {
            id: "n2",
            name: "content",
            type: "string",
            label: "Content",
            required: true,
            trim: true,
          },
          {
            id: "n3",
            name: "session",
            type: "reference",
            label: "Session",
            required: true,
            ref: "Session",
          },
          {
            id: "n4",
            name: "attachments",
            type: "array",
            label: "Attachments",
            required: false,
          },
        ],
      },
    },
    {
      id: "Session",
      name: "Session",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Session",
        description: "Session bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "agent",
            type: "reference",
            label: "Agent",
            required: true,
            ref: "Agent",
          },
          {
            id: "n2",
            name: "user",
            type: "reference",
            label: "User",
            required: true,
            ref: "User",
          },
        ],
      },
    },
    {
      id: "Family",
      name: "Family",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Family",
        description: "Family bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "agent",
            type: "reference",
            label: "Agent",
            required: true,
            ref: "Agent",
          },
          {
            id: "n2",
            name: "parent",
            type: "reference",
            label: "Parent",
            required: true,
            ref: "Family",
          },
        ],
      },
    },
    {
      id: "Node",
      name: "Node",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Node",
        description: "Node bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "name",
            type: "string",
            label: "Name",
            required: true,
            trim: true,
          },
          {
            id: "n2",
            name: "label",
            type: "string",
            label: "Label",
            required: true,
            trim: true,
          },
          {
            id: "n3",
            name: "type",
            type: "string",
            label: "Type",
            required: true,
            enum: [
              "string",
              "number",
              "boolean",
              "array",
              "object",
              "function",
              "date",
              "reference",
            ],
          },
          {
            id: "n4",
            name: "unique",
            type: "boolean",
            label: "Unique",
            required: false,
            default: false,
          },
          {
            id: "n5",
            name: "required",
            type: "boolean",
            label: "Required",
            required: false,
            default: false,
          },
          {
            id: "n6",
            name: "enum",
            type: "array",
            label: "Enum",
            required: false,
          },
          {
            id: "n7",
            name: "match",
            type: "string",
            label: "Match",
            required: false,
          },
          {
            id: "n8",
            name: "default",
            type: "any",
            label: "Default",
            required: false,
          },
          {
            id: "n9",
            name: "minLength",
            type: "number",
            label: "Min Length",
            required: false,
          },
          {
            id: "n10",
            name: "maxLength",
            type: "number",
            label: "Max Length",
            required: false,
          },
          {
            id: "n11",
            name: "min",
            type: "number",
            label: "Min",
            required: false,
          },
          {
            id: "n12",
            name: "max",
            type: "number",
            label: "Max",
            required: false,
          },
          {
            id: "n13",
            name: "trim",
            type: "boolean",
            label: "Trim",
            required: false,
          },
          {
            id: "n14",
            name: "regex",
            type: "string",
            label: "Regex",
            required: false,
          },

          {
            id: "n15",
            name: "select",
            type: "boolean",
            label: "Select",
            required: false,
          },
          {
            id: "n16",
            name: "index",
            type: "string",
            label: "Index",
            required: false,
          },
          {
            id: "n17",
            name: "ref",
            type: "string",
            label: "Ref",
            required: false,
          },
          {
            id: "n18",
            name: "optionLabel",
            type: "string",
            label: "Option Label",
            required: false,
          },
        ],
      },
    },
    {
      id: "Edge",
      name: "Edge",
      position: { x: 500, y: 800 },
      type: VersionType.MODEL,
      data: {
        name: "Edge",
        description: "Edge bilgilerini içeren şema",
        schemas: [
          {
            id: "n1",
            name: "type",
            type: "string",
            label: "Type",
            required: true,
            enum: [
              VersionType.MODEL,
              VersionType.AGENT,
              VersionType.SCREEN,
              VersionType.PAGE,
            ],
          },
          {
            id: "n2",
            name: "source",
            type: "string",
            label: "Source",
            required: true,
          },
          {
            id: "n3",
            name: "target",
            type: "string",
            label: "Target",
            required: true,
          },
          {
            id: "n4",
            name: "animated",
            type: "boolean",
            label: "Animated",
            required: false,
            default: false,
          },
          {
            id: "n5",
            name: "label",
            type: "string",
            label: "Label",
            required: false,
          },
          {
            id: "n6",
            name: "data",
            type: "any",
            label: "Data",
            required: false,
          },
          {
            id: "n7",
            name: "sourceNode",
            type: "string",
            label: "Source Node",
            required: false,
            ref: "Node",
          },
          {
            id: "n8",
            name: "targetNode",
            type: "string",
            label: "Target Node",
            required: false,
            ref: "Node",
          },
        ],
      },
    },
  ],
  edges: [
    {
      id: "e1",
      source: "Agent",
      target: "Key",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e2",
      source: "Agent",
      target: "Project",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e3",
      source: "Chat",
      target: "Session",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e4",
      source: "Edge",
      target: "Version",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e5",
      source: "Agent",
      target: "Family",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },

    {
      id: "e7",
      source: "Key",
      target: "User",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },

    {
      id: "e9",
      source: "Node",
      target: "Version",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },

    {
      id: "e11",
      source: "Project",
      target: "User",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },

    {
      id: "e13",
      source: "Session",
      target: "Agent",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e14",
      source: "Session",
      target: "User",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
    {
      id: "e15",
      source: "Version",
      target: "Project",
      animated: true,
      label: "N:1",
      type: VersionType.MODEL,
      data: {
        type: "oneToMany",
      },
    },
  ],
};
